spring.application.name=Userservice
server.port=${PORT}
spring.jpa.hibernate.ddl-auto=update
#IT specifies how hbernate migrates chnages to database when changes happens to models. in abovr example, we have
# specfied as update which means whenever there are changes to mddles, migrate thme to database. we can check in the doc
# of mysql begnner url whch is specified in doc of project module.
spring.datasource.url=jdbc:mysql://localhost:3306/usersservicedb
spring.datasource.username=serviceuser
#above statement i fr with which user spring shud connect to database.
#spring.datasource.password=ThePassword
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# above statement is needed since jpa needs JDBC to connect to whch database driver class as below.
#The spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver property is essential for telling Spring Boot to use the MySQL JDBC driver. This driver enables the application to connect to a
# MySQL database, execute SQL queries, and interact with the database in a standardized manner.
spring.jpa.show-sql: true
#ths indcates that to show query when orm specifies a method, for exmpele,
#findbyID(10) it will show internal query like below select * from database where id=10;
eureka.client.fetch-registry=true
eureka.client.register-with-eureka=true
eureka.client.service-url.defaultZone=http://localhost:8761/eureka
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.properties.hibernate.format_sql=true
logging.level.org.springframework.security=trace
spring.security.user.name=user
spring.security.user.password=password
spring.security.oauth2.authorizationserver.client.oidc-client.registration.client-id=oidc-client
spring.security.oauth2.authorizationserver.client.oidc-client.registration.client-secret={noop}secret
spring.security.oauth2.authorizationserver.client.oidc-client.registration.client-authentication-methods=client_secret_basic
spring.security.oauth2.authorizationserver.client.oidc-client.registration.authorization-grant-types=authorization_code, refresh_token
spring.security.oauth2.authorizationserver.client.oidc-client.registration.redirect-uris=http://127.0.0.1:8080/login/oauth2/code/oidc-client
spring.security.oauth2.authorizationserver.client.oidc-client.registration.post-logout-redirect-uris=http://127.0.0.1:8080/
spring.security.oauth2.authorizationserver.client.oidc-client.registration.scopes=openid, profile
spring.security.oauth2.authorizationserver.client.oidc-client.require-authorization-consent=true

